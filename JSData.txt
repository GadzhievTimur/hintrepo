1) Срока - String (let a = 'Hi') (let a = '10')

В JavaScript существует три типа кавычек.
Двойные кавычки: "Привет".
Одинарные кавычки: 'Привет'.
Обратные кавычки: Привет.
Обратные кавычки часто используются для печати переменной внутри строки. Например alert(Ей ${a} лет)

Число - number (let a = 10) (let a = 10.31231)
может быть как целым числом, так и с плавающей точкой

Булевы значения(логические) - boolean (let a = true) (let a = false)

Null - let a = null
null не является «ссылкой на несуществующий объект» или «нулевым указателем», как в некоторых других языках.

Это просто специальное значение, которое представляет собой «ничего», «пусто» или «значение неизвестно».

Undefined -
let a
alert (a) // undefined

Оно означает, что значение не было присвоено


2) String, number

3) Ссылка на переменную в прямом смысле - это ссылка на адрес в
памяти. Если создать переменные message и word, к переменной
message присвоить значение 'hi' и сделать ссылку одной на другую,
то обе будут ссылаться на адрес 'hi' в памяти. но, если
переприсвоить message и написать, например, message = 'hello',
то переменная message выведит 'hello', a word выведит 'hi'


4) В программах NaN используется довольно редко. Это возвращаемое
значение в ситуациях, когда математические (Math) функции не
срабатывают должным образом (например, при вызове Math.sqrt(-1))
или когда функция, пытающаяся считать число из строки, терпит
неудачу по причине того, что в строке не число (parseInt('blabla')).

для проверки переменной на значение NaN есть 2 способа:
let x = NaN
1) функция isNaN(x) // true
2) условие x !== x // true


5)вывод undefined

6)hasOwnProperty может использоваться для определения того,
содержит ли объект указанное свойство в качестве собственного
свойства объекта; в отличие от оператора in, этот метод не
проверяет существование свойств в цепочке прототипов объекта.


7) undefined и null используются при проверке значений переменных.
undefined переменная без значения или несуществующая переменная.
null можно задать в значении переменной, но null также
используется при проверке значений переменных


8) с помощью var

9)use strict используется для выполнения кода в "строгом режиме". по умолчанию use strict в консоли выключен.

Также use strict помогает быстрее найти некоторые ошибки и
исключить использование бесполезных и опасных черт JS, которые
либо запрещены, либо приводят к ошибке.


10)Объект — это ссылочный тип данных, то есть это значение в
памяти, на которое возможно сослаться с помощью идентификатора.

Примитивный тип данных хранит фактическое значение, в то время
как ссылочные переменные хранят адреса объектов, на которые они
ссылаются.


11)возведение в степень "*"
умножение ""
деление "/"
сложение "+"
вычитание "-"
присваивание "="

Math - это встроенный объект, хранящий в своих свойствах и
методах различные математические константы и функции. Объект Math
не является функциональным.


12) parseInt и parsFloat - это два метода преобразования
нечисловых примитивов в цифры: Int - целые числа Float - с
плавающей запятой.

parseInt(x, base), где x - значение, которое необходимо
проинтерпретировать , а base - система счисления (от 2 до 36)
parseFloat ('3 и что-нибудь ещё') вернёт значение 3, т.к. он
разбивает строку и возвращает число


13)Метод Math.round() возвращает число, округлённое к ближайшему
целому.

Метод Math.ceil() - округление вверх. Округляет аргумент до
ближайшего большего целого.

Метод Math.floor() - округление вниз. Округляет аргумент до
ближайшего меньшего целого.

Метод toFixed(n) округляет число до n знаков после запятой и
возвращает строковое представление результата.